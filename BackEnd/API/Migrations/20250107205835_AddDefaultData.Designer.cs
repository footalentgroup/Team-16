// <auto-generated />
using System;
using API.DataBase.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250107205835_AddDefaultData")]
    partial class AddDefaultData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.DataBase.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            LastName = "admin1",
                            Name = "admin1",
                            Password = "12345678"
                        },
                        new
                        {
                            Id = 2,
                            Email = "admin2@gmail.com",
                            LastName = "admin2",
                            Name = "admin2",
                            Password = "12345678"
                        });
                });

            modelBuilder.Entity("API.DataBase.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PersonalID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PersonalIDType")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonalID")
                        .IsUnique();

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Marcos@gmail.com",
                            FirstName = "Marcos",
                            LastName = "Rodriguez",
                            Password = "$2a$11$noQ8s1RjbkQZwJrNqMQwHOiZ.pkaBFX1LAqOwh8x4JpEFFnO.0uEy",
                            PersonalID = "34098349",
                            PersonalIDType = 0,
                            Phone = "+54934245673748"
                        },
                        new
                        {
                            Id = 2,
                            Birth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Marcos@gmail.com",
                            FirstName = "Marcos",
                            LastName = "Rodriguez",
                            Password = "$2a$11$JzvfksetW830zaqg163A9OtL2A9Qir93GhQMIay7qNyhFIMJ.Wl5u",
                            PersonalID = "49298349",
                            PersonalIDType = 0,
                            Phone = "+54934245673748"
                        },
                        new
                        {
                            Id = 3,
                            Birth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Marcos@gmail.com",
                            FirstName = "Marcos",
                            LastName = "Rodriguez",
                            Password = "$2a$11$H/Sg5axHJm57BOraho9jVOX3kZkVt2ENbV2krhDM7uDPIsWEzCFh.",
                            PersonalID = "AA34098349",
                            PersonalIDType = 1,
                            Phone = "+54934245673748"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
